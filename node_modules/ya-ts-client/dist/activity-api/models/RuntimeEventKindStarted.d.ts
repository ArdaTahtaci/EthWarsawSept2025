export type RuntimeEventKindStarted = (Record<string, any> & {
    /**
     *  The specification of ExeScript commands format as per Activity API specification. Including TRANSFER command syntax extension described in [this specification](https://github.com/golemfactory/golem-architecture/blob/master/GIPS/GIP-PR0001-multifile-transfer.md).
     * ## Implementation Notes
     * The schemas have been defined to accept a following format of JSON command collections:
     * ``` [ { "deploy": { "net": [{ "id": "id", "ip": "10.0.0.2", "mask": "255.255.0.0" }], "hosts": {"master": "10.0.0.1"}, "nodes": {"10.0.0.1": "0xdeadbeef"} } }, { "start": { "args": [] } }, { "transfer": { "from": "http://34.244.4.185:8000/LICENSE", "to": "container:/input/file_in", "format": "zip", "depth": 2, "fileset": [{"desc":"all images", "includes": ["*.jpg"], "excludes": ["db*.*"] }] } }, { "run": { "entry_point": "rust-wasi-tutorial", "args": ["/input/file_in", "/output/file_cp"], "capture": { "stdout": {"stream": {}}, "stderr": {"stream": {}} } } }, { "sign": {} }, { "terminate": {} }, ... ] ```
     * ### Rust
     * For Rust - this format is a default representation of Rust enum types, as serialized by `serde` library. Therefore it is recommended to use this yaml specification to manually specify Rust enum types rather than depend on automatically-generated code.
     *
     */
    started: Record<string, any>;
});
